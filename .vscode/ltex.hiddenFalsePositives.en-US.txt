{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qsummary: Animation & Physics id: export categories: Animation, Physics, 3D, Models, Joints, Animation Tree status: Published authors: Ondřej Kyzr Feedback Link: https://google.com\\E$"}
{"rule":"ID_CASING","sentence":"^\\Qsummary: Animation & Physics id: export categories: Animation, Physics, 3D, Models, Joints, Animation Tree status: Published authors: Ondřej Kyzr Feedback Link: https://google.com\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QTo easily handle changes, saving, and loading of these parameters I created a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q class called PlayerStats that has all of these parameters.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qaside negative Some parameters, that do not change (\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, etc.), are still present as \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q parameters of the player class.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qaside positive I moved the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and rotated to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, which closes matches the player collider.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qaside positive I moved the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and rotated to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, which closely matches the player collider.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qaside positive The \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q option is almost necessary for high-poly models and environments, since it improves performance.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q setup\nLet's open the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q scene and set up an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QProject Download\nIf you want to see how the finished template looks like after this lab, you can download it here:  Template Done Project\\E$"}
{"rule":"ID_CASING","sentence":"^\\Qsummary: Basics of Godot and 3D id: export categories: Installation, Basics, Engine UI, 3D status: Published authors: Ondřej Kyzr Feedback Link: https://google.com\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QPlease download the Godot engine using the following link and place it into a folder of your liking:  Godot 4.4.1\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QThis lab's template can be downloaded here:  Template Project\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_RULE","sentence":"^\\QNodes\nNodes are the basic building blocks of a scene.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QThere are two ways:\nSimply press the  button on the top of the scene hierarchy and select it.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QIf you want to see how the finished template looks like after this lab, you can download it here:  Template Done Project\\E$"}
{"rule":"ID_CASING","sentence":"^\\Qsummary: 3D Player Character and Camera id: export categories: 3D, CharacterBody3D, 3D Player Controller, Camera3D, Materials, GDScript status: Published authors: Ondřej Kyzr Feedback Link: https://google.com\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QPlease download the template project, that we will be using in this lab:  Template Project\\E$"}
{"rule":"SOME_NN_VBP","sentence":"^\\QGiving the player some color\nLet's give the player capsule some color.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QYou can do that by:\nEither by clicking the  next to the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node in the scene hierarchy.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QYou can do that by:\nEither click the  next to the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node in the scene hierarchy.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QPrivate functions and variables should start with an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QNow start the game with , try pressing \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, and watch the Output console window at the bottom of the editor.\\E$"}
{"rule":"ATD_VERBS_TO_COLLOCATION","sentence":"^\\QJump Function Code\nJump Force\nTo apply the jump force we will simply set the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to the value.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QSelect the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node in the scene hierarchy\nPress the  button on top of the scene hierarchy\nClick the  in the popup window to change the path to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (create the folder \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q if needed)\nRename the script (end of the path) to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nThe full path should look like \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nPress Create\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QLet's also add an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q parameter for the camera sensitivity:\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QAdd an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q variable as a reference to the camera pivot.\\E$"}
{"rule":"ID_CASING","sentence":"^\\Qsummary: 2D Platformer id: export categories: 2D, Tilemap, Tileset, Sprite, 2D Player Controller, CharacterBody2D status: Published authors: Ondřej Kyzr Feedback Link: https://google.com\\E$"}
{"rule":"ID_CASING","sentence":"^\\Qsummary: 2D Platformer in 3D id: export categories: 2D, 3D, SubViewport, Area3D, Camera3D status: Published authors: Ondřej Kyzr Feedback Link: https://google.com\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QOpen the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q scene (or any one of the three 2D scenes)\nRight-click the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node\nSelect Save Branch as a Scene\nSave it to a folder \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (needs to be created) and name the file \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nNow open all the other 2D scenes\nDelete the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node\nInstantiate the saved \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q scene using the  icon above the scene hierarchy\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QAdd an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node as a child of the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nAs the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q warning suggests, add a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q as a child of the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nFill in the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q property of the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q with a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nMove the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to the bottom left corner of the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q object\nAdjust the collision layer of the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q like this (no need for others to detect it):\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QSome 2D platforming levels might be set at a different angle in the 3D world, that is why we will add an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q variable, that will be used as the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q parameter.\\E$"}
{"rule":"OUTSIDE_OF","sentence":"^\\QMove Player 3D Outside of the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nThe first problem is, that the player 3D stays in the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and is disabled.\\E$"}
{"rule":"OUTSIDE_OF","sentence":"^\\QMove Player 2D Outside of the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nThe third problem is also with the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"ID_CASING","sentence":"^\\Qsummary: Ground Enemy AI (NavMesh, FSM) id: export categories: Globals, AI, NavMesh, 3D, FSM, Plugin, Projectile status: Published authors: Ondřej Kyzr Feedback Link: https://google.com\\E$"}
{"rule":"A_INFINITIVE","sentence":"^\\QLet's add the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q as an Autoload:\nOpen the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nNavigate to the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q tab\nGo into the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q tab\nClick on the folder icon and find the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q script.\\E$"}
{"rule":"ENGLISH_WORD_REPEAT_BEGINNING_RULE","sentence":"^\\QWhen a state is exited, its \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q function is called.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QLet's add an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q variable and an index, so that we know which point we are targeting:\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QAdding Chase State as a Resource\nSimilarly to the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q we will add an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q variable of the type \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to the enemy.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QThe most straightforward way is to add an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to the enemy and check all bodies that enter this area.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QAdd an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q scene (rename to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q)\nAdd a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q as a child of the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nAdd a new \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q as the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q property of the \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"ID_CASING","sentence":"^\\Qsummary: Ground Enemy AI (Behavior Trees), Air Enemy AI (Steering Behaviors) id: export categories: AI, Behavior Trees, Beehave, NavMesh, 3D, Plugin, Steering Behaviors, Steerings, Seek, Pursue status: Published authors: Ondřej Kyzr Feedback Link: https://google.com\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QWhat are  Behavior Trees?\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QAdd a  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node as a child of the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nRename it to \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QAdd a  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node as a child of the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nRename it to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nAdd the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q script from folder \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to it\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QAdd a  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node as a child of the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nRename it to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nAdd the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q script from folder \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to it\nIn the Inspector of the node set the property \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QNode  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q child of  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nName \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nScript \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QNode  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q child of  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nName \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nScript default\nNode  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q child of  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nName \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nScript default\nNode  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q child of  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nName \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nScript \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"EN_A_VS_AN","sentence":"^\\Qaside positive A better practice for making AI with Behavior Trees could be making an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, that is not dependent on anything specific to any enemy type.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QNode  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q child of  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nName \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nScript default\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QFor this we can use the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QChase Conditions\nIf you remember how the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node works, it only runs the first child that returns \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QSo if we add conditions, that check the visibility and closeness of the player, as children of the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, it will ensure that Chase Behavior is only run when the player is seen and close enough, otherwise the Patrol Behavior will be run.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QNode  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q child of  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nName \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nScript \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nProperty \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q = \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QCooldownDecorator and  AlwaysSucceedDecorator\nNow all that is left to do is to set the target of the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to the player position.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QCooldownDecorator and  AlwaysSucceedDecorator\nNow all that is left to do is to set the target of the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to the player position.\\E$"}
{"rule":"AUXILIARY_DO_WITH_INCORRECT_VERB_FORM","sentence":"^\\QTo do timed or repeated actions in the Beehave Tree, we can use the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node, which works like this:\nExecutes its child until it either returns \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q or \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, after which it will start an internal timer and return \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q until the timer is complete.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QTo do timed or repeated actions in the Beehave Tree, we can use the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node, which works like this:\nExecutes its child until it either returns \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q or \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, after which it will start an internal timer and return \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q until the timer is complete.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QHowever, having just the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node and an  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node with target setting as a child, would not work, due to the timer returning \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q while waiting.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QHowever, having just the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node and an  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node with target setting as a child, would not work, due to the timer returning \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q while waiting.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QHowever, having just the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node and an  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node with target setting as a child, would not work, due to the timer returning \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q while waiting.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QThis would cause the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to fail and the Patrol subtree would run.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QThis would cause the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to fail, and the Patrol subtree would run.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QTo circumvent this we can \"ignore\" the result of the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node and act as it would always return \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QAchieving this can be done using the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q as a parent of the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\Qaside positive Normally, you would have to set the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q property of the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node in the Inspector but here it is handled by the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q script.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QThis is due to the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node, which is \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q until the patrol point is reached.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QTo fix this and make our enemy more \"reactive\" we can use a special variant of the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QRight-click the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nSelect the option \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nChoose the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QThis version of the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q works in the same way, except for when a node returns \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QNormally, you would just tick the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q child again, but the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node, first ticks all the previous children again.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QShooting\nThe shooting subtree will be very similar to the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q subtree.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QSame as before we will need to have a  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, whose return state will be ignored, since we do not care if the shooting succeeds or fails.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QThe shooting itself is a single  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q but we also want to set the correct \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q so we need a sequence:\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QThe shooting itself is a single  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, but we also want to set the correct \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q so we need a sequence:\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QThe shooting itself is a single  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, but we also want to set the correct \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q so we need a sequence:\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QThe shooting itself is a single  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, but we also want to set the correct \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, so we need a sequence:\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QWe already have the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q node in the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, so let's add it here too:\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QNode  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q child of  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nName \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nScript \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nProperty \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q = \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nBetween nodes  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and  \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QNext we will add a  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to choose between a condition \"Are we in the chase state?\" and playing the tweens.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QNode  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q child of  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nName \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q\nBetween nodes  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and  \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QOptional tween when shooting\nTo make the enemy behavior the same as the FSM version you can also add the node  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q as a child of the  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, which will make the enemy do the tween when shooting.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QI have prepared an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q in the project so that we can try Steering and different behaviors.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QInstantiate  the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
